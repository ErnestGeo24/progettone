{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrimesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://progettone.onrender.com/gdf';\n  }\n  // Funzione per ottenere i crimini senza parametri\n  getCrimes() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Errore durante il recupero dei dati GeoJSON:', error);\n      throw error;\n    }));\n  }\n  static {\n    this.ɵfac = function CrimesService_Factory(t) {\n      return new (t || CrimesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CrimesService,\n      factory: CrimesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["catchError","CrimesService","constructor","http","apiUrl","getCrimes","get","pipe","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/progettone/prove_mappa/src/app/crimes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n// Definisci il tipo di dato per i crimini\nexport interface Crime {\n  id: number;\n  type: string;\n  date: string;\n  location: string;\n  // Aggiungi altri campi pertinenti qui\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrimesService {\n  private apiUrl = 'https://progettone.onrender.com/gdf';\n\n  constructor(private http: HttpClient) { }\n\n  // Funzione per ottenere i crimini senza parametri\n  getCrimes(): Observable<any> {\n    return this.http.get<any>(this.apiUrl).pipe(\n      catchError(error => {\n        console.error('Errore durante il recupero dei dati GeoJSON:', error);\n        throw error;\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;;;AAc3C,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;EAEd;EAExC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACzCP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;;;uBAbWP,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbZ,aAAa;MAAAa,OAAA,EAAbb,aAAa,CAAAc,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}